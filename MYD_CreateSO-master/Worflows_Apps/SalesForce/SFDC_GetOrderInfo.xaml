<Activity mc:Ignorable="sap sap2010" x:Class="SFDC_GetOrderInfo" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usc="clr-namespace:UiPath.Salesforce.ConnectionService;assembly=UiPath.Salesforce" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OrderId" Type="InArgument(x:String)" />
    <x:Property Name="in_CountryMappingDictionary" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="io_SFDCConnection" Type="InOutArgument(usc:IConnectionService)" />
    <x:Property Name="out_ActivatedByUserEmail" Type="OutArgument(x:String)" />
    <x:Property Name="out_dt_Contract" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Products" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Order" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_BillToAccount" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_AccountId" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_BillToAddress" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_ShipToAddress" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_ShippingAddressDictionary" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1163,1479</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SFDC_GetOrderInfo_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="74">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Salesforce.ConnectionService</x:String>
      <x:String>UiPath.Salesforce.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Salesforce.Telemetry</x:String>
      <x:String>UiPath.Salesforce.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Salesforce.Activities.Wizards.Models</x:String>
      <x:String>UiPath.Salesforce.Activities.Models</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPathTeam.Salesforce.ExtensionPackage</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce.Activities.Wizards</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPathTeam.Salesforce.Activities.ExtensionPackage</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SFDC_GetOrderInfo" sap:VirtualizedContainerService.HintSize="555,1414" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="ContractID" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_userEmail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Get SFDC Order Details" sap:VirtualizedContainerService.HintSize="493,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Retrieving SFDC Order details...&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Sequence DisplayName="Order" sap:VirtualizedContainerService.HintSize="493,80" sap2010:WorkflowViewState.IdRef="Sequence_37">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Order Fields" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetOrderFieldsQuery&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_Order" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[IsNothing(out_dt_Order) OrElse (out_dt_Order.Rows.Count = 0)]" DisplayName="If - Order Not Found in SFDC" sap:VirtualizedContainerService.HintSize="379,25" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw - BRE: Order Not Found in SFDC" Exception="[New BusinessRuleException(&quot;Order with id &quot; + in_OrderId + &quot; was not found in SalesForce. Please make sure the order exists.&quot;)]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_7" />
        </If.Then>
      </If>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Order Products" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetOrderProductsQuery&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_Products" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="Contracts" sap:VirtualizedContainerService.HintSize="493,80" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Check all Products to have the same contract" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign - Initialize Index" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">0</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InterruptibleWhile Condition="[index &lt; out_dt_Products.Rows.Count and String.IsNullOrWhiteSpace(contractId)]" DisplayName="Set the first non empty contract id" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
          <ui:InterruptibleWhile.Body>
            <ui:MultipleAssign DisplayName="MultipleAssign - Contract ID, Increment Index" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[contractId]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[out_dt_Products.Rows.Item(index).Item("SBQQ__Contract__c").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
          </ui:InterruptibleWhile.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InterruptibleWhile>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[out_dt_Products]" DisplayName="Check Contract is the same for all Products" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body - Check Contract is the same for all Products" sap:VirtualizedContainerService.HintSize="546,359" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not row.item(&quot;SBQQ__Contract__c&quot;).ToString.Equals(contractId) and not String.IsNullOrWhiteSpace(row.item(&quot;SBQQ__Contract__c&quot;).ToString)]" DisplayName="If - Same Contract ID" sap:VirtualizedContainerService.HintSize="484,248" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Then>
                    <Throw DisplayName="Throw - BRE: Multiple Contract IDs" Exception="[new BusinessRuleException(&quot;Contract is not the same for all products of the order: &quot; + in_OrderId)]" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Throw_6" />
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <If Condition="[Not(String.IsNullOrWhiteSpace(contractId))]" DisplayName="Get Contract information if it exists" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Contract Info" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
                <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
              </InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetContractDatesQuery&quot;).ToString.Replace(&quot;ContractIdPlaceholder&quot;, contractId)" />
              </InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
              </InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_Contract" />
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Accounts" sap:VirtualizedContainerService.HintSize="493,80" sap2010:WorkflowViewState.IdRef="Sequence_38">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="BillToAccountId" />
        <Variable x:TypeArguments="x:String" Name="AccountID" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign - Accounts Details" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[BillToAccountId]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[out_dt_Order(0)("Bill_To_Account__c").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[AccountID]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[out_dt_Order(0)("AccountId").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Bill To Account" sap:VirtualizedContainerService.HintSize="431,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetBillToAccountQuery&quot;).ToString.Replace(&quot;BillToAccountIdPlaceholder&quot;, BillToAccountId)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_BillToAccount" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Account" sap:VirtualizedContainerService.HintSize="431,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetAccountQuery&quot;).ToString.Replace(&quot;AccountIDPlaceholder&quot;, AccountID)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_AccountId" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="Addresses" sap:VirtualizedContainerService.HintSize="493,614" sap2010:WorkflowViewState.IdRef="Sequence_39">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="BillToAddress" />
        <Variable x:TypeArguments="x:String" Name="ShipToAddress" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign - Addresses Variables" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[BillToAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[out_dt_Order(0)("Bill_To_Address__c").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[ShipToAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[out_dt_Order(0)("Ship_To_Address__c").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Billing Address" sap:VirtualizedContainerService.HintSize="431,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetBillingAddressQuery&quot;).ToString.Replace(&quot;BillToAddressPlaceholder&quot;, BillToAddress)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_BillToAddress" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - Ship To Address" sap:VirtualizedContainerService.HintSize="431,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetShippingAddressQuery&quot;).ToString.Replace(&quot;ShipToAddressPlaceholder&quot;, ShipToAddress)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_ShipToAddress" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[out_dt_ShipToAddress.Rows(0).Item(&quot;Country__c&quot;).ToString.ToLower.Contains(&quot;india&quot;)]" DisplayName="If Shipping Address is in India - do not populate it" sap:VirtualizedContainerService.HintSize="431,25" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:MultipleAssign DisplayName="Multiple Assign - Shpping Address India" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_ShippingAddressDictionary]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("isAddressUsed")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[(False).ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </If.Then>
        <If.Else>
          <ui:MultipleAssign DisplayName="Multiple Assign - Shipping Address Other" sap:VirtualizedContainerService.HintSize="431,411" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_ShippingAddressDictionary]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("country")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Country__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("addressee")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Account__r.Legal__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("addr1")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Street_Line_1__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("addr2")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Street_Line_2__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("city")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("City__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("state")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("State__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("zip")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Zip_Postal_Code__c").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("sfdcId")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[out_dt_ShipToAddress.Rows(0).Item("Id").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("isAddressUsed")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[(True).ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_ShippingAddressDictionary("countryEnumValue")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_CountryMappingDictionary(out_ShippingAddressDictionary("country").ToString)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
        </If.Else>
      </If>
    </Sequence>
    <TryCatch DisplayName="Try to get the email of the activated by user" sap:VirtualizedContainerService.HintSize="493,25" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Get Activated by email" sap:VirtualizedContainerService.HintSize="441,325" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SFDC_ExecuteQuery_RetryOnExpired - ActivatedByUser Email" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
                <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
              </InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetActivatedByEmailQuery&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId)" />
              </InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
              </InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_userEmail" />
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Assign - Activated By User Email" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ActivatedByUserEmail]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[if(dt_userEmail.Columns.Contains("ActivatedBy.Email"), dt_userEmail.Rows(0).Item("ActivatedBy.Email").ToString, "")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="406,373" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Activated By User Error" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Activated By User Error" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Activated by user email could not be retrieved&quot;]" />
              <Assign DisplayName="Assign - Activated By User Error Empty" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_ActivatedByUserEmail]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message - SFDC Order Details Success" sap:VirtualizedContainerService.HintSize="493,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Retrieved SFDC details...&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>