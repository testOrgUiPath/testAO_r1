<Activity mc:Ignorable="sap sap2010" x:Class="FilterOutELAChildrenFromOrderItems" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usc="clr-namespace:UiPath.Salesforce.ConnectionService;assembly=UiPath.Salesforce" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OrderId" Type="InArgument(x:String)" />
    <x:Property Name="io_SFDCConnection" Type="InOutArgument(usc:IConnectionService)" />
    <x:Property Name="out_dt_Products" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ELAPartialProductCodes" Type="InArgument(s:String[])" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1163,2141</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FilterOutELAChildrenFromOrderItems_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPathTeam.Salesforce.ExtensionPackage</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Salesforce.ConnectionService</x:String>
      <x:String>UiPath.Salesforce.Models</x:String>
      <x:String>UiPath.Salesforce.Telemetry</x:String>
      <x:String>UiPath.Salesforce.Activities</x:String>
      <x:String>UiPath.Salesforce.Activities.Models</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPathTeam.Salesforce.Activities.ExtensionPackage</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FilterOutELAChildrenFromOrderItems" sap:VirtualizedContainerService.HintSize="713,2076" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="exclusionList" />
      <Variable x:TypeArguments="x:String" Name="exclusionListString" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ELAChildrenFirstLevel" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ELAChildrenSecondLevel" />
      <Variable x:TypeArguments="s:String[]" Name="parentELAOrderItemIdsArray" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get all ELA root(parent) items" sap:VirtualizedContainerService.HintSize="651,915" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="parentELAOrderItemIdsString">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message - Get ELA Order Items" sap:VirtualizedContainerService.HintSize="532,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Retrieving ELA Parent Order items...&quot;]" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each ELA partial product code - add the OrderItem id to a string" sap:VirtualizedContainerService.HintSize="532,571" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_ELAPartialProductCodes]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="partialProductCode" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,446" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dt_ELAParentOrderItem" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get the Parent ELA Order Items which match the partial product code" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
                    <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
                  </InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetELAParentOrderItemSOQL&quot;).ToString.Replace(&quot;PartialProductCodePlaceholder&quot;, partialProductCode).Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId)" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_ELAParentOrderItem" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ELAParentOrderItem]" DisplayName="Add the ELA Parent Order Item Ids to the ParentELAOrderItems" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="elaParentRow" />
                    </ActivityAction.Argument>
                    <Assign DisplayName="Initialize the list of parent ELA Products" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[parentELAOrderItemIdsString]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[if(String.IsNullOrWhiteSpace(parentELAOrderItemIdsString), elaParentRow.Item("Id").ToString, parentELAOrderItemIdsString + "," + elaParentRow.Item("Id").ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign DisplayName="Convert the string ELA Order Items to an Array" sap:VirtualizedContainerService.HintSize="532,61" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[parentELAOrderItemIdsArray]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[parentELAOrderItemIdsString.Split(","c)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Create the exclusion list" sap:VirtualizedContainerService.HintSize="651,890" sap2010:WorkflowViewState.IdRef="Sequence_33">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message - Create the exclusion list" sap:VirtualizedContainerService.HintSize="589,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Creating the exclusion list&quot;]" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each parent ELA Order Item Id" sap:VirtualizedContainerService.HintSize="589,546" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[parentELAOrderItemIdsArray]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="parentELAOrderItemId" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body - Process ELA children starting from the ELA root and add them to the exclusion list" sap:VirtualizedContainerService.HintSize="553,421" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Get ELA Children" sap:VirtualizedContainerService.HintSize="491,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Retrieving ELA children...&quot;]" />
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get ELA 1st level children" sap:VirtualizedContainerService.HintSize="491,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
                    <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
                  </InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetELAChildrenSOQL&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId).Replace(&quot;ELAOrderItemIdPlaceholder&quot;,parentELAOrderItemId)" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_ELAChildrenFirstLevel" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[dt_ELAChildrenFirstLevel IsNot Nothing AndAlso dt_ELAChildrenFirstLevel.Rows.Count &gt; 0]" DisplayName="If ELA children 1st level found - add them to the exclusion list" sap:VirtualizedContainerService.HintSize="491,25" sap2010:WorkflowViewState.IdRef="If_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ELAChildrenFirstLevel]" DisplayName="For each 1st level child - add to exclusion list" sap:VirtualizedContainerService.HintSize="524,475" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="elaChild1" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body - For each 1st level child - add to exclusion list" sap:VirtualizedContainerService.HintSize="490,354" sap2010:WorkflowViewState.IdRef="Sequence_35">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <AddToCollection x:TypeArguments="x:String" Collection="[exclusionList]" DisplayName="Add 1st level child to exclusion list" sap:VirtualizedContainerService.HintSize="428,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[elaChild1(&quot;Id&quot;).ToString]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get ELA 2nd level children" sap:VirtualizedContainerService.HintSize="428,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
                                <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
                              </InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetELAChildrenSOQL&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId).Replace(&quot;ELAOrderItemIdPlaceholder&quot;,elaChild1(&quot;Id&quot;).ToString)" />
                              </InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                              </InArgument>
                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
                                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_ELAChildrenSecondLevel" />
                              </OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <If Condition="[dt_ELAChildrenSecondLevel IsNot Nothing AndAlso dt_ELAChildrenSecondLevel.Rows.Count &gt; 0]" DisplayName="If there are 2nd level ELA children - add them to the exclusion list" sap:VirtualizedContainerService.HintSize="428,25" sap2010:WorkflowViewState.IdRef="If_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ELAChildrenSecondLevel]" DisplayName="For Each Row - elaChild2 in dt_ELAChildrenSecondLevel" sap:VirtualizedContainerService.HintSize="434,257" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="elaChild2" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body -For Each Row - elaChild2 in dt_ELAChildrenSecondLevel" sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <AddToCollection x:TypeArguments="x:String" Collection="[exclusionList]" DisplayName="Add 2nd level child to exclusion list" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[elaChild2(&quot;Id&quot;).ToString]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign DisplayName="Convert exclusion list into a string to be added to the query" sap:VirtualizedContainerService.HintSize="589,61" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[exclusionListString]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["('" + String.Join("','", exclusionList) + "')"]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Retrieve Order Products which are not on the exclustion list and overwrite Parent ELA Order Item values for Total" sap:VirtualizedContainerService.HintSize="651,80" sap2010:WorkflowViewState.IdRef="Sequence_21">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message - Get Order Products" sap:VirtualizedContainerService.HintSize="518,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Getting Order products without ELA children...&quot;]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Order Items except the ones on the exclusion list" sap:VirtualizedContainerService.HintSize="518,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Worflows_Apps\SalesForce\SFDC_ExecuteQuery_RetryOnExpired.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="usc:IConnectionService" x:Key="io_SFDCConnection">
            <mva:VisualBasicReference x:TypeArguments="usc:IConnectionService" ExpressionText="io_SFDCConnection" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SFDCQuery">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GetOrderProductsQuery&quot;).ToString.Replace(&quot;OrderIdPlaceholder&quot;, in_OrderId) + in_Config(&quot;NotInExclusionListCondition&quot;).ToString.Replace(&quot;ExclusionListPlaceholder&quot;, exclusionListString)" />
          </InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Result">
            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_dt_Products" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[out_dt_Products]" DisplayName="Overwrite the parent ELA Order Items fields" sap:VirtualizedContainerService.HintSize="518,441" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[parentELAOrderItemIdsArray.Contains(row(&quot;Id&quot;).ToString)]" DisplayName="If Id is one of the ELA parents - overwrite fields" sap:VirtualizedContainerService.HintSize="484,320" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <ui:MultipleAssign DisplayName="Overwrite unit price and total price with package price" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[row("TotalPrice")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[row("SBQQ__QuoteLine__r.SBQQ__PackageTotal__c").ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[row("UnitPrice")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[row("SBQQ__QuoteLine__r.SBQQ__PackageTotal__c").ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
    </Sequence>
  </Sequence>
</Activity>