<Activity mc:Ignorable="sap sap2010" x:Class="CreateOnlySO" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:n="clr-namespace:NetsuiteActivities;assembly=NetsuiteActivities" xmlns:nn="clr-namespace:NetsuiteActivities.NetsuiteService;assembly=NetsuiteActivities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_SONumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_SuccessfulCreationSO" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_ExceptionDetails" Type="OutArgument(x:String)" />
    <x:Property Name="in_salesRepInternalId" Type="InArgument(x:String)" />
    <x:Property Name="in_nsRequestBillToTier" Type="InArgument(x:String)" />
    <x:Property Name="in_reseller" Type="InArgument(x:String)" />
    <x:Property Name="in_dealType" Type="InArgument(x:String)" />
    <x:Property Name="out_result" Type="OutArgument(nn:WriteResponse)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_SalesOrderModel" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_RAInternalIds" Type="OutArgument(x:String)" />
    <x:Property Name="out_SuccessfulCreationRA" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_BillToTier" Type="InArgument(x:String)" />
    <x:Property Name="in_EntityInternalId" Type="InArgument(x:String)" />
    <x:Property Name="in_ResellerInternalId" Type="InArgument(x:String)" />
    <x:Property Name="in_EndUserInternalId" Type="InArgument(x:String)" />
    <x:Property Name="in_CustomForm" Type="InArgument(x:String)" />
    <x:Property Name="in_Location" Type="InArgument(x:String)" />
    <x:Property Name="in_ShippingAddressDictionary" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_BillToAddressInternalId" Type="InArgument(x:String)" />
    <x:Property Name="in_ShippingAddressUsed" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_TotalProductsAmount" Type="InArgument(x:Double)" />
    <x:Property Name="in_FinanceOwnerInternalId" Type="InArgument(x:String)" />
    <x:Property Name="io_record" Type="InOutArgument(nn:RecordRef)" />
    <x:Property Name="out_SOShouldBeCreated" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_RAShouldBeCreated" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_dt_Products" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1775,3117</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>NetsuiteActivities.NetsuiteService</x:String>
      <x:String>NetsuiteActivities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NetsuiteActivities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Create SO and RAs" sap:VirtualizedContainerService.HintSize="1785,3052" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="RAProductsDictionary" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_SOProducts" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="UpdateSOProductsDictionary" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, s:DateTime)" Name="RAStartDatesDictionary" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Start" sap:VirtualizedContainerService.HintSize="1723,25" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Upfront_CreateSOandRAs workflow started...&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:MultipleAssign DisplayName="Multiple Assign - Initialize Variables" sap:VirtualizedContainerService.HintSize="1723,25" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[RAProductsDictionary]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(Of String, DataTable)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dt_SOProducts]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">[in_dt_Products.Clone]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_RAInternalIds]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_SONumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationSO]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[UpdateSOProductsDictionary]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(Of String, DataTable)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:DateTime)">[RAStartDatesDictionary]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, s:DateTime)">[new Dictionary(Of String, DateTime)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <If Condition="[in_TotalProductsAmount &gt;= 0 andAlso in_SalesOrderModel(&quot;Currency&quot;).ToString.ToUpper &lt;&gt; &quot;IRN&quot;]" DisplayName="Create only SO or both SO and RA" sap:VirtualizedContainerService.HintSize="1723,2811" sap2010:WorkflowViewState.IdRef="If_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Create SO with all products - both positive and negative lines" sap:VirtualizedContainerService.HintSize="539,455" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Amount &gt;= 0" sap:VirtualizedContainerService.HintSize="477,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Total products amount &gt;=0. Only creating NS SO...&quot;]" />
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="According to the business logic, if the total products amont is equal to or greatr that 0, there is no need to create a NS RA, just a NS SO, so setting the arguments accordingly." DisplayName="Multiple Assign - SO &amp; RA Arguments (Amount  &gt;= 0)" sap:VirtualizedContainerService.HintSize="477,82" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_SOShouldBeCreated]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_RAShouldBeCreated]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <TryCatch DisplayName="Try Catch - Create SO (Amount &gt;= 0)" sap:VirtualizedContainerService.HintSize="438,308" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Create SO (Amount &gt;= 0)" sap:VirtualizedContainerService.HintSize="668,974" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_ShippingAddressUsed AND CBool(in_ShippingAddressDictionary(&quot;isAddressUsed&quot;).ToString)]" DisplayName="If - Shipping Address Used" sap:VirtualizedContainerService.HintSize="606,219" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <n:addSalesOrderNew AccountName="{x:Null}" BillingAddressAddr1="{x:Null}" BillingAddressAddressee="{x:Null}" BillingAddressAddrtext="{x:Null}" BillingAddressCity="{x:Null}" BillingAddressCountry="{x:Null}" BillingAddressOverride="{x:Null}" BillingAddressState="{x:Null}" BillingAddressZip="{x:Null}" BlockCustomPriceLevel="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContractEndDate="{x:Null}" ContractEndDateSpecified="{x:Null}" ContractStartDateSpecified="{x:Null}" CreatedBy="{x:Null}" CustomListRateIsAnnualRate="{x:Null}" CustomPriceLevelForMSItems="{x:Null}" EndUserEmailAddress="{x:Null}" FederalFlag="{x:Null}" Iban="{x:Null}" IndiaTaxINScriptId="{x:Null}" IndiaTaxItemScriptId="{x:Null}" IndiaTaxOUTScriptId="{x:Null}" IsDelegated="{x:Null}" IsRejected="{x:Null}" IsSellerImporterOfRecord="{x:Null}" ManualRenewal="{x:Null}" OrderStartDateSpecified="{x:Null}" ReplacementTransaction="{x:Null}" Result="{x:Null}" SFDCOrderType="{x:Null}" SalesrepName="{x:Null}" ScopeQuote="{x:Null}" ScopeQuoteSpecified="{x:Null}" ShipToTier="{x:Null}" ShippingAddressAddrtext="{x:Null}" ShippingAddressCountry="{x:Null}" ShippingAddressInternalId="{x:Null}" SubsidiaryInternalid="{x:Null}" SubsidiaryName="{x:Null}" SuperApproverApproved="{x:Null}" TermsInternalid="{x:Null}" TokenId="{x:Null}" TokenSecret="{x:Null}" balance="{x:Null}" canhavestackable="{x:Null}" saveonauthdecline="{x:Null}" shipcomplete="{x:Null}" shipdate="{x:Null}" shipisresidential="{x:Null}" BillToTier="[in_BillToTier]" BillingAddressInternalId="[in_BillToAddressInternalId]" BillingFrequency="[in_SalesOrderModel(&quot;BillingFrequency&quot;).ToString]" ClassInternalid="[in_Config(&quot;ClassID&quot;).ToString]" ClassName="[in_Config(&quot;Class&quot;).ToString]" Compensation="[in_SalesOrderModel(&quot;Compensation&quot;).ToString]" ContractId="[in_SalesOrderModel(&quot;ContractRef&quot;).ToString]" ContractStartDate="[CDate(in_SalesOrderModel(&quot;ContractStartDate&quot;).ToString)]" ContractTerm="0" CurrencyInternalid="[in_Config(&quot;Currency&quot;+in_SalesOrderModel(&quot;Currency&quot;).ToString).ToString]" CurrencyName="[in_SalesOrderModel(&quot;Currency&quot;).ToString]" CustomForm="[in_CustomForm]" DealType="[in_DealType]" DepartmentInternalid="[in_Config(&quot;DepartmentID&quot;).ToString]" DepartmentName="[in_Config(&quot;Department&quot;).ToString]" DisclaimerForAllInvoices="[in_Config(&quot;DisclaimerAllInvoices&quot;).ToString]" DisclaimerForEuSRLSubsidiary="[in_Config(&quot;DisclaimerEUSRL&quot;).ToString]" DisclaimerForNonEuSRLSubsidiary="[in_Config(&quot;DisclaimerNonEUSRL&quot;).ToString]" DisplayName="Add Sales Order NEW - shipping address used" EndDate="[CDate(in_SalesOrderModel(&quot;ContractEndDate&quot;).ToString)]" EndDateSpecified="True" EndUserInternalId="[in_EndUserInternalId]" EntityInternalId="[in_EntityInternalId]" ExternalID="[&quot;SO-&quot;+in_SalesOrderModel(&quot;OrderId&quot;).ToString]" FinanceOwnerInternalId="[in_FinanceOwnerInternalId]" FirstAnniversaryDate="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), DateTime.Today, CDate(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString))]" FirstAnniversaryDateSpecified="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), False, True)]" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="282,25" sap2010:WorkflowViewState.IdRef="addSalesOrderNew_7" IgnoreItemPlaceOfSupply="False" IndiaPlaceOfSupplyRecType="[in_Config(&quot;PlaceOfSupplyRecType&quot;).ToString]" IndiaTaxRecType="[in_Config(&quot;TaxGroupRecType&quot;).ToString]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" ItemsList="[in_dt_Products]" JPCampaign="[in_SalesOrderModel(&quot;OpportunityJPCampaign&quot;).ToString]" LocationName="[in_Location]" Memo="[in_SalesOrderModel(&quot;FinanceMemo&quot;).ToString]" NonStandardTCComment="[in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString]" NonStandardTCFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString))]" NonStandardTCFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, True)]" OrderStartDate="[CDate(in_SalesOrderModel(&quot;StartDate&quot;).ToString)]" OrderType="[in_SalesOrderModel(&quot;OrderType&quot;).ToString]" OtherRefNum="[in_SalesOrderModel(&quot;PoNumber&quot;).ToString]" POType="[in_SalesOrderModel(&quot;POType&quot;).ToString]" ReBillFor="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ReBillFor&quot;).ToString), &quot;NA&quot;, in_SalesOrderModel(&quot;ReBillFor&quot;).ToString)]" Record="[io_record]" Region="[in_SalesOrderModel(&quot;BillToAccountGeo&quot;).ToString.ToUpper.Trim]" RenewalTerms="[cint(in_Config(&quot;RenewalTerms&quot;).ToString)]" ResellerInternalId="[in_ResellerInternalId]" SalesforceOpportunityId="[in_SalesOrderModel(&quot;OpportunityId&quot;).ToString]" SalesrepInternalid="[in_SalesRepInternalId]" ShippingAddressAddr1="[in_ShippingAddressDictionary(&quot;addr1&quot;).ToString]" ShippingAddressAddr2="[in_ShippingAddressDictionary(&quot;addr2&quot;).ToString]" ShippingAddressAddressee="[in_ShippingAddressDictionary(&quot;addressee&quot;).ToString]" ShippingAddressCity="[in_ShippingAddressDictionary(&quot;city&quot;).ToString]" ShippingAddressCountryEnumValue="[in_ShippingAddressDictionary(&quot;countryEnumValue&quot;).ToString]" ShippingAddressOverride="False" ShippingAddressOverrideSpecified="True" ShippingAddressSFDCId="[in_ShippingAddressDictionary(&quot;sfdcId&quot;).ToString]" ShippingAddressSpecified="[in_ShippingAddressUsed]" ShippingAddressState="[in_ShippingAddressDictionary(&quot;state&quot;).ToString]" ShippingAddressZip="[in_ShippingAddressDictionary(&quot;zip&quot;).ToString]" SoComment="[in_SalesOrderModel(&quot;FinanceComments&quot;).ToString]" StartDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" StartDateSpecified="True" Status="[in_Config(&quot;SoStatus&quot;).ToString]" TermsName="[in_SalesOrderModel(&quot;PaymentTerms&quot;).ToString]" TransactionDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" TransactionDateSpecified="True" ZeroValueSOFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString))]" ZeroValueSOFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, True)]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </n:addSalesOrderNew>
                  </If.Then>
                  <If.Else>
                    <n:addSalesOrderNew AccountName="{x:Null}" BillingAddressAddr1="{x:Null}" BillingAddressAddressee="{x:Null}" BillingAddressAddrtext="{x:Null}" BillingAddressCity="{x:Null}" BillingAddressCountry="{x:Null}" BillingAddressOverride="{x:Null}" BillingAddressState="{x:Null}" BillingAddressZip="{x:Null}" BlockCustomPriceLevel="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContractEndDate="{x:Null}" ContractEndDateSpecified="{x:Null}" ContractStartDateSpecified="{x:Null}" CreatedBy="{x:Null}" CustomListRateIsAnnualRate="{x:Null}" CustomPriceLevelForMSItems="{x:Null}" EndUserEmailAddress="{x:Null}" FederalFlag="{x:Null}" Iban="{x:Null}" IndiaTaxINScriptId="{x:Null}" IndiaTaxItemScriptId="{x:Null}" IndiaTaxOUTScriptId="{x:Null}" IsDelegated="{x:Null}" IsRejected="{x:Null}" IsSellerImporterOfRecord="{x:Null}" ManualRenewal="{x:Null}" OrderStartDateSpecified="{x:Null}" ReplacementTransaction="{x:Null}" Result="{x:Null}" SFDCOrderType="{x:Null}" SalesrepName="{x:Null}" ScopeQuote="{x:Null}" ScopeQuoteSpecified="{x:Null}" ShipToTier="{x:Null}" ShippingAddressAddr1="{x:Null}" ShippingAddressAddr2="{x:Null}" ShippingAddressAddressee="{x:Null}" ShippingAddressAddrtext="{x:Null}" ShippingAddressCity="{x:Null}" ShippingAddressCountry="{x:Null}" ShippingAddressCountryEnumValue="{x:Null}" ShippingAddressInternalId="{x:Null}" ShippingAddressOverride="{x:Null}" ShippingAddressOverrideSpecified="{x:Null}" ShippingAddressSFDCId="{x:Null}" ShippingAddressSpecified="{x:Null}" ShippingAddressState="{x:Null}" ShippingAddressZip="{x:Null}" SubsidiaryInternalid="{x:Null}" SubsidiaryName="{x:Null}" SuperApproverApproved="{x:Null}" TermsInternalid="{x:Null}" TokenId="{x:Null}" TokenSecret="{x:Null}" balance="{x:Null}" canhavestackable="{x:Null}" saveonauthdecline="{x:Null}" shipcomplete="{x:Null}" shipdate="{x:Null}" shipisresidential="{x:Null}" BillToTier="[in_BillToTier]" BillingAddressInternalId="[in_BillToAddressInternalId]" BillingFrequency="[in_SalesOrderModel(&quot;BillingFrequency&quot;).ToString]" ClassInternalid="[in_Config(&quot;ClassID&quot;).ToString]" ClassName="[in_Config(&quot;Class&quot;).ToString]" Compensation="[in_SalesOrderModel(&quot;Compensation&quot;).ToString]" ContractId="[in_SalesOrderModel(&quot;ContractRef&quot;).ToString]" ContractStartDate="[CDate(in_SalesOrderModel(&quot;ContractStartDate&quot;).ToString)]" ContractTerm="0" CurrencyInternalid="[in_Config(&quot;Currency&quot;+in_SalesOrderModel(&quot;Currency&quot;).ToString).ToString]" CurrencyName="[in_SalesOrderModel(&quot;Currency&quot;).ToString]" CustomForm="[in_CustomForm]" DealType="[in_DealType]" DepartmentInternalid="[in_Config(&quot;DepartmentID&quot;).ToString]" DepartmentName="[in_Config(&quot;Department&quot;).ToString]" DisclaimerForAllInvoices="[in_Config(&quot;DisclaimerAllInvoices&quot;).ToString]" DisclaimerForEuSRLSubsidiary="[in_Config(&quot;DisclaimerEUSRL&quot;).ToString]" DisclaimerForNonEuSRLSubsidiary="[in_Config(&quot;DisclaimerNonEUSRL&quot;).ToString]" DisplayName="Add Sales Order NEW - Shipping Address Not Used" EndDate="[CDate(in_SalesOrderModel(&quot;ContractEndDate&quot;).ToString)]" EndDateSpecified="True" EndUserInternalId="[in_EndUserInternalId]" EntityInternalId="[in_EntityInternalId]" ExternalID="[&quot;SO-&quot;+in_SalesOrderModel(&quot;OrderId&quot;).ToString]" FinanceOwnerInternalId="[in_FinanceOwnerInternalId]" FirstAnniversaryDate="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), DateTime.Today, CDate(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString))]" FirstAnniversaryDateSpecified="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), False, True)]" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="279,25" sap2010:WorkflowViewState.IdRef="addSalesOrderNew_8" IgnoreItemPlaceOfSupply="False" IndiaPlaceOfSupplyRecType="[in_Config(&quot;PlaceOfSupplyRecType&quot;).ToString]" IndiaTaxRecType="[in_Config(&quot;TaxGroupRecType&quot;).ToString]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" ItemsList="[in_dt_Products]" JPCampaign="[in_SalesOrderModel(&quot;OpportunityJPCampaign&quot;).ToString]" LocationName="[in_Location]" Memo="[in_SalesOrderModel(&quot;FinanceMemo&quot;).ToString]" NonStandardTCComment="[in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString]" NonStandardTCFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString))]" NonStandardTCFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, True)]" OrderStartDate="[CDate(in_SalesOrderModel(&quot;StartDate&quot;).ToString)]" OrderType="[in_SalesOrderModel(&quot;OrderType&quot;).ToString]" OtherRefNum="[in_SalesOrderModel(&quot;PoNumber&quot;).ToString]" POType="[in_SalesOrderModel(&quot;POType&quot;).ToString]" ReBillFor="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ReBillFor&quot;).ToString), &quot;NA&quot;, in_SalesOrderModel(&quot;ReBillFor&quot;).ToString)]" Record="[io_record]" Region="[in_SalesOrderModel(&quot;BillToAccountGeo&quot;).ToString.ToUpper.Trim]" RenewalTerms="[cint(in_Config(&quot;RenewalTerms&quot;).ToString)]" ResellerInternalId="[in_ResellerInternalId]" SalesforceOpportunityId="[in_SalesOrderModel(&quot;OpportunityId&quot;).ToString]" SalesrepInternalid="[in_SalesRepInternalId]" SoComment="[in_SalesOrderModel(&quot;FinanceComments&quot;).ToString]" StartDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" StartDateSpecified="True" Status="[in_Config(&quot;SoStatus&quot;).ToString]" TermsName="[in_SalesOrderModel(&quot;PaymentTerms&quot;).ToString]" TransactionDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" TransactionDateSpecified="True" ZeroValueSOFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString))]" ZeroValueSOFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, True)]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </n:addSalesOrderNew>
                  </If.Else>
                </If>
                <If Condition="[not String.IsNullOrEmpty(in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString)]" DisplayName="If TC Comment Needs To Be Added" sap:VirtualizedContainerService.HintSize="606,301" sap2010:WorkflowViewState.IdRef="If_19">
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NS_UpdateTCComment workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Worflows_Apps\Netsuite\NS_UpdateTCComment.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_salesOrderExternalId">["SO-"+in_SalesOrderModel("OrderId").ToString]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_tcComment">[in_SalesOrderModel("NonStandardTCComment").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                </If>
                <Assign DisplayName="Assign - out_SONumber (Only SO)" sap:VirtualizedContainerService.HintSize="606,61" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_SONumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[io_record.internalId]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Initialize out_SuccessfulCreationSO (Only SO)" sap:VirtualizedContainerService.HintSize="606,61" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationSO]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - out_ExceptionDetails Empty (Only SO)" sap:VirtualizedContainerService.HintSize="606,61" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName=" Create SO Exception (Amount &gt;= 0)" sap:VirtualizedContainerService.HintSize="493,437" sap2010:WorkflowViewState.IdRef="Sequence_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - So Error (Amount &gt;= 0)" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Couldn't create SO. Reason: &quot; + exception.Message + &quot;. &quot;]" />
                    <ui:MultipleAssign DisplayName="Multiple Assign - Exception Details (Amount &gt; =, SO Exception)" sap:VirtualizedContainerService.HintSize="431,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[out_SONumber]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[out_SOShouldBeCreated]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationSO]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[out_ExceptionDetails +"Couldn't create SO. Reason: " + exception.Message + ". "]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <If Condition="[Not(String.IsNullOrWhiteSpace(out_SONumber))]" DisplayName="If - SO Internal ID, Add Booking Exceptions (Upfront_CreateSOandRAs, amt &gt;= 0)" sap:VirtualizedContainerService.HintSize="477,25" sap2010:WorkflowViewState.IdRef="If_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NS_AddBookingException workflow (Upfront_CreateSOandRAs, amt &gt;= 0)" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Worflows_Apps\Netsuite\NS_AddBookingException.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_SalesOrderModel">[in_SalesOrderModel]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SalesOrderID">[out_SONumber]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="in_TotalProductsAmount&lt; 0" sap:VirtualizedContainerService.HintSize="1273,2652" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Amount&lt; 0" sap:VirtualizedContainerService.HintSize="1211,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Total products amount &lt; 0. Spliting products to determine SO and RAs which need to be created...&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dt_Products]" DisplayName="Split Products DT into SO and RAs Product DTs" sap:VirtualizedContainerService.HintSize="1211,25" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <If Condition="[NOT String.IsNullOrWhiteSpace(row.Item(&quot;revisedSOID&quot;).ToString)]" DisplayName="If - Check revisedSOID" sap:VirtualizedContainerService.HintSize="519,219" sap2010:WorkflowViewState.IdRef="If_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If Condition="[Convert.ToDouble(row.Item(&quot;amount&quot;).ToString) &gt; 0]" DisplayName="If - revisedSOID" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="If_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[row.ItemArray]" DataTable="[dt_SOProducts]" DisplayName="Add Data Row - revisedSO, amount positive" sap:VirtualizedContainerService.HintSize="281,25" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                      </If.Then>
                      <If.Else>
                        <If Condition="[RAProductsDictionary.ContainsKey(row.item(&quot;revisedSOID&quot;).ToString)]" DisplayName="check if RA Dictionary entry exists - one dictionary for each RA" sap:VirtualizedContainerService.HintSize="414,25" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[row.ItemArray]" DataTable="[RAProductsDictionary.Item(row.item(&quot;revisedSOID&quot;).ToString)]" DisplayName="Add Data Row - revisedSO, amount negative, revisedSOID key Exists" sap:VirtualizedContainerService.HintSize="281,25" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddDataRow>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="revisedSO, amount negative, revisedSOID keyDOES NOT  Exist" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign - RAProductsDictionary.Item(row.item(&quot;revisedSOID&quot;).ToString)" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_9">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[RAProductsDictionary.Item(row.item("revisedSOID").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable">[in_dt_Products.Clone]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign - RAStartDatesDictionary.Item(row.item(&quot;revisedSOID&quot;).ToString)" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_17">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[RAStartDatesDictionary.Item(row.item("revisedSOID").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(row.Item("customFieldContractItemStartDate").ToString, "dd-MM-yyyy", Nothing, Nothing)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[row.ItemArray]" DataTable="[RAProductsDictionary.Item(row.item(&quot;revisedSOID&quot;).ToString)]" DisplayName="Add Data Row - revisedSO, amount negative, revisedSOID keyDOES NOT  Exist" sap:VirtualizedContainerService.HintSize="338,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Then>
                  <If.Else>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[row.ItemArray]" DataTable="[dt_SOProducts]" DisplayName="Add Data Row - revisedSOID Empty" sap:VirtualizedContainerService.HintSize="274,25" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                  </If.Else>
                </If>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <If Condition="[dt_SOProducts.Rows.Count &gt; 0]" DisplayName="If SO products count is greater than 0" sap:VirtualizedContainerService.HintSize="1211,2178" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Create SO, amt &lt; 0 + Booking Exceptions" sap:VirtualizedContainerService.HintSize="766,2019" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch - Create SO, If SO products count is greater than 0, amount nnegative" sap:VirtualizedContainerService.HintSize="704,1567" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Create SO, If SO products count is greater than 0, amount negative" sap:VirtualizedContainerService.HintSize="666,1339" sap2010:WorkflowViewState.IdRef="Sequence_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message - SO Needs To Be Created" sap:VirtualizedContainerService.HintSize="604,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;SO needs to be created...&quot;]" />
                      <Assign DisplayName="Assign - Set SO Should Be Created Argument True" sap:VirtualizedContainerService.HintSize="604,61" sap2010:WorkflowViewState.IdRef="Assign_22">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_SOShouldBeCreated]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[in_ShippingAddressUsed AND CBool(in_ShippingAddressDictionary(&quot;isAddressUsed&quot;).ToString)]" DisplayName="If - Check Shipping Address, amount negative" sap:VirtualizedContainerService.HintSize="604,219" sap2010:WorkflowViewState.IdRef="If_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <n:addSalesOrderNew AccountName="{x:Null}" BillingAddressAddr1="{x:Null}" BillingAddressAddressee="{x:Null}" BillingAddressAddrtext="{x:Null}" BillingAddressCity="{x:Null}" BillingAddressCountry="{x:Null}" BillingAddressOverride="{x:Null}" BillingAddressState="{x:Null}" BillingAddressZip="{x:Null}" BlockCustomPriceLevel="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContractEndDate="{x:Null}" ContractEndDateSpecified="{x:Null}" CreatedBy="{x:Null}" CustomListRateIsAnnualRate="{x:Null}" CustomPriceLevelForMSItems="{x:Null}" EndUserEmailAddress="{x:Null}" FederalFlag="{x:Null}" Iban="{x:Null}" IndiaTaxINScriptId="{x:Null}" IndiaTaxItemScriptId="{x:Null}" IndiaTaxOUTScriptId="{x:Null}" IsDelegated="{x:Null}" IsRejected="{x:Null}" IsSellerImporterOfRecord="{x:Null}" ManualRenewal="{x:Null}" ReplacementTransaction="{x:Null}" Result="{x:Null}" SalesrepName="{x:Null}" ScopeQuote="{x:Null}" ScopeQuoteSpecified="{x:Null}" ShipToTier="{x:Null}" ShippingAddressAddrtext="{x:Null}" ShippingAddressCountry="{x:Null}" ShippingAddressInternalId="{x:Null}" SubsidiaryInternalid="{x:Null}" SubsidiaryName="{x:Null}" SuperApproverApproved="{x:Null}" TermsInternalid="{x:Null}" TokenId="{x:Null}" TokenSecret="{x:Null}" balance="{x:Null}" canhavestackable="{x:Null}" saveonauthdecline="{x:Null}" shipcomplete="{x:Null}" shipdate="{x:Null}" shipisresidential="{x:Null}" BillToTier="[in_BillToTier]" BillingAddressInternalId="[in_BillToAddressInternalId]" BillingFrequency="[in_SalesOrderModel(&quot;BillingFrequency&quot;).ToString]" ClassInternalid="[in_Config(&quot;ClassID&quot;).ToString]" ClassName="[in_Config(&quot;Class&quot;).ToString]" Compensation="[in_SalesOrderModel(&quot;Compensation&quot;).ToString]" ContractId="[in_SalesOrderModel(&quot;ContractRef&quot;).ToString]" ContractStartDate="[CDate(in_SalesOrderModel(&quot;ContractStartDate&quot;).ToString)]" ContractStartDateSpecified="[CBool(in_SalesOrderModel(&quot;ContractStartDateSpecified&quot;).ToString)]" ContractTerm="0" CurrencyInternalid="[in_Config(&quot;Currency&quot;+in_SalesOrderModel(&quot;Currency&quot;).ToString).ToString]" CurrencyName="[in_SalesOrderModel(&quot;Currency&quot;).ToString]" CustomForm="[in_CustomForm]" DealType="[in_DealType]" DepartmentInternalid="[in_Config(&quot;DepartmentID&quot;).ToString]" DepartmentName="[in_Config(&quot;Department&quot;).ToString]" DisclaimerForAllInvoices="This invoice covers the procurement of UiPath’s software and/or services, as detailed herein, and is subject to the UiPath “End User License Agreement” located at https://www.uipath.com/hubfs/legalspot/UiPath_EULA.pdf (or succ" DisclaimerForEuSRLSubsidiary="Our General and Conditions will apply Reverse Charge System according with Council Directive 2006/112/EC" DisclaimerForNonEuSRLSubsidiary="Transaction Nontaxable on the Romanian territory" DisplayName="Add Sales Order NEW - Shipping Address Used" EndDate="[CDate(in_SalesOrderModel(&quot;ContractEndDate&quot;).ToString)]" EndDateSpecified="[CBool(in_SalesOrderModel(&quot;ContractEndDateSpecified&quot;).ToString)]" EndUserInternalId="[in_EndUserInternalId]" EntityInternalId="[in_EntityInternalId]" ExternalID="[&quot;SO-&quot;+in_SalesOrderModel(&quot;OrderId&quot;).ToString]" FinanceOwnerInternalId="[in_FinanceOwnerInternalId]" FirstAnniversaryDate="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), DateTime.Today, CDate(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString))]" FirstAnniversaryDateSpecified="[CBool(in_SalesOrderModel(&quot;FirstAnniversaryDateSpecified&quot;).ToString)]" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="279,25" sap2010:WorkflowViewState.IdRef="addSalesOrderNew_9" IgnoreItemPlaceOfSupply="False" IndiaPlaceOfSupplyRecType="[in_Config(&quot;PlaceOfSupplyRecType&quot;).ToString]" IndiaTaxRecType="[in_Config(&quot;TaxGroupRecType&quot;).ToString]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" ItemsList="[dt_SOProducts]" JPCampaign="[in_SalesOrderModel(&quot;OpportunityJPCampaign&quot;).ToString]" LocationName="[in_Location]" Memo="[in_SalesOrderModel(&quot;FinanceMemo&quot;).ToString]" NonStandardTCComment="[in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString]" NonStandardTCFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString))]" NonStandardTCFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, True)]" OrderStartDate="[CDate(in_SalesOrderModel(&quot;StartDate&quot;).ToString)]" OrderStartDateSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;StartDate&quot;).ToString), False, True)]" OrderType="[in_SalesOrderModel(&quot;OrderType&quot;).ToString]" OtherRefNum="[in_SalesOrderModel(&quot;PoNumber&quot;).ToString]" POType="[in_SalesOrderModel(&quot;POType&quot;).ToString]" ReBillFor="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ReBillFor&quot;).ToString), &quot;NA&quot;, in_SalesOrderModel(&quot;ReBillFor&quot;).ToString)]" Record="[io_record]" Region="[in_SalesOrderModel(&quot;BillToAccountGeo&quot;).ToString.ToUpper.Trim]" RenewalTerms="[cint(in_Config(&quot;RenewalTerms&quot;).ToString)]" ResellerInternalId="[in_ResellerInternalId]" SFDCOrderType="[in_SalesOrderModel(&quot;SFDCOrderType&quot;).ToString]" SalesforceOpportunityId="[in_SalesOrderModel(&quot;OpportunityId&quot;).ToString]" SalesrepInternalid="[in_SalesRepInternalId]" ShippingAddressAddr1="[in_ShippingAddressDictionary(&quot;addr1&quot;).ToString]" ShippingAddressAddr2="[in_ShippingAddressDictionary(&quot;addr2&quot;).ToString]" ShippingAddressAddressee="[in_ShippingAddressDictionary(&quot;addressee&quot;).ToString]" ShippingAddressCity="[in_ShippingAddressDictionary(&quot;city&quot;).ToString]" ShippingAddressCountryEnumValue="[in_ShippingAddressDictionary(&quot;countryEnumValue&quot;).ToString]" ShippingAddressOverride="False" ShippingAddressOverrideSpecified="True" ShippingAddressSFDCId="[in_ShippingAddressDictionary(&quot;sfdcId&quot;).ToString]" ShippingAddressSpecified="True" ShippingAddressState="[in_ShippingAddressDictionary(&quot;state&quot;).ToString]" ShippingAddressZip="[in_ShippingAddressDictionary(&quot;zip&quot;).ToString]" SoComment="[in_SalesOrderModel(&quot;FinanceComments&quot;).ToString]" StartDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" StartDateSpecified="True" Status="[in_Config(&quot;SoStatus&quot;).ToString]" TermsName="[in_SalesOrderModel(&quot;PaymentTerms&quot;).ToString]" TransactionDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" TransactionDateSpecified="True" ZeroValueSOFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString))]" ZeroValueSOFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, True)]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </n:addSalesOrderNew>
                        </If.Then>
                        <If.Else>
                          <n:addSalesOrderNew AccountName="{x:Null}" BillingAddressAddr1="{x:Null}" BillingAddressAddressee="{x:Null}" BillingAddressAddrtext="{x:Null}" BillingAddressCity="{x:Null}" BillingAddressCountry="{x:Null}" BillingAddressOverride="{x:Null}" BillingAddressState="{x:Null}" BillingAddressZip="{x:Null}" BlockCustomPriceLevel="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContractEndDate="{x:Null}" ContractEndDateSpecified="{x:Null}" CreatedBy="{x:Null}" CustomListRateIsAnnualRate="{x:Null}" CustomPriceLevelForMSItems="{x:Null}" EndUserEmailAddress="{x:Null}" FederalFlag="{x:Null}" Iban="{x:Null}" IndiaTaxINScriptId="{x:Null}" IndiaTaxItemScriptId="{x:Null}" IndiaTaxOUTScriptId="{x:Null}" IsDelegated="{x:Null}" IsRejected="{x:Null}" IsSellerImporterOfRecord="{x:Null}" ManualRenewal="{x:Null}" ReplacementTransaction="{x:Null}" Result="{x:Null}" SalesrepName="{x:Null}" ScopeQuote="{x:Null}" ScopeQuoteSpecified="{x:Null}" ShipToTier="{x:Null}" ShippingAddressAddr1="{x:Null}" ShippingAddressAddr2="{x:Null}" ShippingAddressAddressee="{x:Null}" ShippingAddressAddrtext="{x:Null}" ShippingAddressCity="{x:Null}" ShippingAddressCountry="{x:Null}" ShippingAddressCountryEnumValue="{x:Null}" ShippingAddressInternalId="{x:Null}" ShippingAddressOverride="{x:Null}" ShippingAddressOverrideSpecified="{x:Null}" ShippingAddressSFDCId="{x:Null}" ShippingAddressSpecified="{x:Null}" ShippingAddressState="{x:Null}" ShippingAddressZip="{x:Null}" SubsidiaryInternalid="{x:Null}" SubsidiaryName="{x:Null}" SuperApproverApproved="{x:Null}" TermsInternalid="{x:Null}" TokenId="{x:Null}" TokenSecret="{x:Null}" balance="{x:Null}" canhavestackable="{x:Null}" saveonauthdecline="{x:Null}" shipcomplete="{x:Null}" shipdate="{x:Null}" shipisresidential="{x:Null}" BillToTier="[in_BillToTier]" BillingAddressInternalId="[in_BillToAddressInternalId]" BillingFrequency="[in_SalesOrderModel(&quot;BillingFrequency&quot;).ToString]" ClassInternalid="[in_Config(&quot;ClassID&quot;).ToString]" ClassName="[in_Config(&quot;Class&quot;).ToString]" Compensation="[in_SalesOrderModel(&quot;Compensation&quot;).ToString]" ContractId="[in_SalesOrderModel(&quot;ContractRef&quot;).ToString]" ContractStartDate="[CDate(in_SalesOrderModel(&quot;ContractStartDate&quot;).ToString)]" ContractStartDateSpecified="[CBool(in_SalesOrderModel(&quot;ContractStartDateSpecified&quot;).ToString)]" ContractTerm="0" CurrencyInternalid="[in_Config(&quot;Currency&quot;+in_SalesOrderModel(&quot;Currency&quot;).ToString).ToString]" CurrencyName="[in_SalesOrderModel(&quot;Currency&quot;).ToString]" CustomForm="[in_CustomForm]" DealType="[in_DealType]" DepartmentInternalid="[in_Config(&quot;DepartmentID&quot;).ToString]" DepartmentName="[in_Config(&quot;Department&quot;).ToString]" DisclaimerForAllInvoices="This invoice covers the procurement of UiPath’s software and/or services, as detailed herein, and is subject to the UiPath “End User License Agreement” located at https://www.uipath.com/hubfs/legalspot/UiPath_EULA.pdf (or succ" DisclaimerForEuSRLSubsidiary="Our General and Conditions will apply Reverse Charge System according with Council Directive 2006/112/EC" DisclaimerForNonEuSRLSubsidiary="Transaction Nontaxable on the Romanian territory" DisplayName="Add Sales Order NEW - No Shipping Address" EndDate="[CDate(in_SalesOrderModel(&quot;ContractEndDate&quot;).ToString)]" EndDateSpecified="[CBool(in_SalesOrderModel(&quot;ContractEndDateSpecified&quot;).ToString)]" EndUserInternalId="[in_EndUserInternalId]" EntityInternalId="[in_EntityInternalId]" ExternalID="[&quot;SO-&quot;+in_SalesOrderModel(&quot;OrderId&quot;).ToString]" FinanceOwnerInternalId="[in_FinanceOwnerInternalId]" FirstAnniversaryDate="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), DateTime.Today, CDate(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString))]" FirstAnniversaryDateSpecified="[if( String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;FirstAnniversaryDate&quot;).ToString), False, True)]" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="280,25" sap2010:WorkflowViewState.IdRef="addSalesOrderNew_10" IgnoreItemPlaceOfSupply="False" IndiaPlaceOfSupplyRecType="[in_Config(&quot;PlaceOfSupplyRecType&quot;).ToString]" IndiaTaxRecType="[in_Config(&quot;TaxGroupRecType&quot;).ToString]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" ItemsList="[dt_SOProducts]" JPCampaign="[in_SalesOrderModel(&quot;OpportunityJPCampaign&quot;).ToString]" LocationName="[in_Location]" Memo="[in_SalesOrderModel(&quot;FinanceMemo&quot;).ToString]" NonStandardTCComment="[in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString]" NonStandardTCFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString))]" NonStandardTCFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;NonStandardTC&quot;).ToString), False, True)]" OrderStartDate="[CDate(in_SalesOrderModel(&quot;StartDate&quot;).ToString)]" OrderStartDateSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;StartDate&quot;).ToString), False, True)]" OrderType="[in_SalesOrderModel(&quot;OrderType&quot;).ToString]" OtherRefNum="[in_SalesOrderModel(&quot;PoNumber&quot;).ToString]" POType="[in_SalesOrderModel(&quot;POType&quot;).ToString]" ReBillFor="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ReBillFor&quot;).ToString), &quot;NA&quot;, in_SalesOrderModel(&quot;ReBillFor&quot;).ToString)]" Record="[io_record]" Region="[in_SalesOrderModel(&quot;BillToAccountGeo&quot;).ToString.ToUpper.Trim]" RenewalTerms="[cint(in_Config(&quot;RenewalTerms&quot;).ToString)]" ResellerInternalId="[in_ResellerInternalId]" SFDCOrderType="[in_SalesOrderModel(&quot;SFDCOrderType&quot;).ToString]" SalesforceOpportunityId="[in_SalesOrderModel(&quot;OpportunityId&quot;).ToString]" SalesrepInternalid="[in_SalesRepInternalId]" SoComment="[in_SalesOrderModel(&quot;FinanceComments&quot;).ToString]" StartDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" StartDateSpecified="True" Status="[in_Config(&quot;SoStatus&quot;).ToString]" TermsName="[in_SalesOrderModel(&quot;PaymentTerms&quot;).ToString]" TransactionDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" TransactionDateSpecified="True" ZeroValueSOFlag="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, CBool(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString))]" ZeroValueSOFlagSpecified="[if(String.IsNullOrWhiteSpace(in_SalesOrderModel(&quot;ZeroValueSO&quot;).ToString), False, True)]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </n:addSalesOrderNew>
                        </If.Else>
                      </If>
                      <If Condition="[not String.IsNullOrEmpty(in_SalesOrderModel(&quot;NonStandardTCComment&quot;).ToString)]" DisplayName="If TC Comment Needs To Be Added" sap:VirtualizedContainerService.HintSize="604,301" sap2010:WorkflowViewState.IdRef="If_18">
                        <If.Then>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NS_UpdateTCComment workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Worflows_Apps\Netsuite\NS_UpdateTCComment.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_salesOrderExternalId">["SO-"+in_SalesOrderModel("OrderId").ToString]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_tcComment">[in_SalesOrderModel("NonStandardTCComment").ToString]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                      </If>
                      <Assign DisplayName="Assign - out_SONumber, amt negative" sap:VirtualizedContainerService.HintSize="604,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_SONumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[io_record.internalId]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - out_SuccessfulCreationSO True, amt negative" sap:VirtualizedContainerService.HintSize="604,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationSO]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - out_ExceptionDetails Empty, amt negative" sap:VirtualizedContainerService.HintSize="604,61" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message - Success Create SO" sap:VirtualizedContainerService.HintSize="374,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Succesfully created SO number: &quot; + out_SONumber +&quot;.&quot;]" />
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="469,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName=" Create SO, If SO products count is greater than 0, amount nnegative Exception" sap:VirtualizedContainerService.HintSize="493,437" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message - So Error (Amount &lt; 0)" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[&quot;Couldn't create SO. Reason: &quot; + exception.Message + &quot;. &quot;]" />
                          <ui:MultipleAssign DisplayName="Multiple Assign - Exception Details (Amount &lt; 0, SO Exception)" sap:VirtualizedContainerService.HintSize="431,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[out_SONumber]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[out_SOShouldBeCreated]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationSO]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[out_ExceptionDetails +"Couldn't create SO. Reason: " + exception.Message + ". "]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <If Condition="[Not(String.IsNullOrWhiteSpace(out_SONumber))]" DisplayName="If - SO Internal ID, Add Booking Exceptions (Upfront_CreateSOandRAs, amt &lt; 0)" sap:VirtualizedContainerService.HintSize="704,301" sap2010:WorkflowViewState.IdRef="If_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NS_AddBookingException workflow (Upfront_CreateSOandRAs, amt &lt; 0)" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Worflows_Apps\Netsuite\NS_AddBookingException.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_SalesOrderModel">[in_SalesOrderModel]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_SalesOrderID">[out_SONumber]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="SO Doesn't Need To Be Created" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message - SO Doesn't Need To Be Created" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;SO doesn't need to be created...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Assign DisplayName="Assign - Set SO Should Be Created Argument False" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_SOShouldBeCreated]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign - Initilize out_SuccessfulCreationRA, amt negative" sap:VirtualizedContainerService.HintSize="1010,61" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationRA]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[RAProductsDictionary.Keys.Count &gt; 0]" DisplayName="If RAs should be created" sap:VirtualizedContainerService.HintSize="1010,25" sap2010:WorkflowViewState.IdRef="If_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="RAs should be created" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message - Needs To Be Created" sap:VirtualizedContainerService.HintSize="668,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[RAProductsDictionary.Keys.Count.ToString + &quot; RA(s) need(s) to be created...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Assign DisplayName="Assign - Set RA Should Be Created Argument True" sap:VirtualizedContainerService.HintSize="668,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_RAShouldBeCreated]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Initializing successful creation with True. If any of the RAs is not created successfully, this value will be overwritten with value False." DisplayName="Assign - Initialize RA Success" sap:VirtualizedContainerService.HintSize="668,133" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationRA]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If Condition="[in_SalesOrderModel(&quot;CreditReason&quot;).ToString = &quot;&quot;]" DisplayName="If Credit Reason empty" sap:VirtualizedContainerService.HintSize="668,249" sap2010:WorkflowViewState.IdRef="If_14">
                  <If.Then>
                    <Assign DisplayName="Assign billing issue to Credit Reason" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_SalesOrderModel("CreditReason")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["System Issues"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If Condition="[in_SalesOrderModel(&quot;CreditReasonCategory&quot;).ToString = &quot;&quot;]" DisplayName="If Credit Reason Category empty" sap:VirtualizedContainerService.HintSize="668,249" sap2010:WorkflowViewState.IdRef="If_15">
                  <If.Then>
                    <Assign DisplayName="Assign product : types to Credit Reason Category" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_SalesOrderModel("CreditReasonCategory")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Invoice: Date"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each key in RAProductsDictionary.Keys" sap:VirtualizedContainerService.HintSize="668,2035" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[RAProductsDictionary.Keys]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="key" />
                      </ActivityAction.Argument>
                      <TryCatch DisplayName="Try Catch - Create RA" sap:VirtualizedContainerService.HintSize="632,1910" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Body - Create RA" sap:VirtualizedContainerService.HintSize="594,1681" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="nn:ReturnAuthorization" Name="initializedRA" />
                              <Variable x:TypeArguments="x:Boolean" Name="isInitializeSuccess" />
                              <Variable x:TypeArguments="nn:RecordRef" Name="createdRA" />
                              <Variable x:TypeArguments="x:Boolean" Name="createSuccessful" />
                              <Variable x:TypeArguments="x:Int32" Name="idxRA" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign idxRA" sap:VirtualizedContainerService.HintSize="532,61" sap2010:WorkflowViewState.IdRef="Assign_33">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[idxRA]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="#CR OI2" DataTable="[RAProductsDictionary.Item(key)]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="532,817" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="r" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="498,665" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,251" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign gross amount - With Round" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_30">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[r("grossAmt")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[Math.Round(Math.Abs(Convert.ToDouble(RAProductsDictionary.Item(key.ToString)(0)("amount"))) + Math.Abs(Convert.ToDouble(RAProductsDictionary.Item(key.ToString)(0)("amount"))) * 0.18, 2)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <Assign DisplayName="Assign gross amount" sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_32">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[r("grossAmt")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Math.Abs(Convert.ToDouble(RAProductsDictionary.Item(key.ToString)(idxRA)("amount"))).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign amount" sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_31">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[r("amount")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Math.Abs(Convert.ToDouble(RAProductsDictionary.Item(key.ToString)(idxRA)("amount"))).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Increment idxRA" sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[idxRA]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[idxRA + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <n:initializeReturnAuthorizationForUpfront AccountName="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" SOLineItemQuantityBilledSavedSearchId="{x:Null}" StartDate="{x:Null}" StartDateSpecified="{x:Null}" TokenID="{x:Null}" TokenSecret="{x:Null}" CreditReason="[in_SalesOrderModel(&quot;CreditReason&quot;).ToString]" CreditReasonCategory="[in_SalesOrderModel(&quot;CreditReasonCategory&quot;).ToString]" DateFormatAsString="dd-MM-yyyy" DisplayName="Initialize return authorization for upfront" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="532,25" sap2010:WorkflowViewState.IdRef="initializeReturnAuthorizationForUpfront_2" InitializeSuccessful="[isInitializeSuccess]" InitializedReturnAuthorization="[initializedRA]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" ItemsList="[RAProductsDictionary.Item(key.ToString)]" SFDCOpportunityId="[in_SalesOrderModel(&quot;OpportunityId&quot;).ToString]" SFDCOrderId="[in_SalesOrderModel(&quot;OrderId&quot;).ToString]" SOInternalID="[key.ToString]" TransactionDate="[CDate(in_SalesOrderModel(&quot;PostingDate&quot;).ToString)]" TransactionDateSpecified="True" />
                            <n:addReturnAuthorizationWithObject AccountName="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" Result="{x:Null}" TokenID="{x:Null}" TokenSecret="{x:Null}" CreatedRA="[createdRA]" DisplayName="Add return authorization with object" HeaderCredentials="[DirectCast(in_Config(&quot;NSHeaderCredentials&quot;), HeaderCredentials)]" sap:VirtualizedContainerService.HintSize="532,25" sap2010:WorkflowViewState.IdRef="addReturnAuthorizationWithObject_2" InputRAObject="[initializedRA]" IsProduction="[CBool(in_Config(&quot;NS_IsProd&quot;).ToString)]" RACreatedSuccessfully="[createSuccessful]" />
                            <Assign DisplayName="Assign - out_RAInternalIds" sap:VirtualizedContainerService.HintSize="532,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_RAInternalIds]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[out_RAInternalIds + createdRA.internalId +", "]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log Message - Success Create RA" sap:VirtualizedContainerService.HintSize="532,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Succesfully created RA.. &quot; + out_RAInternalIds]" />
                            <If Condition="[Not(createSuccessful)]" DisplayName="If - Failed To Create RA" sap:VirtualizedContainerService.HintSize="510.4,248.8" sap2010:WorkflowViewState.IdRef="If_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign DisplayName="Assign - out_SuccessfulCreationRA False" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationRA]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="555.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Create RA Exception" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - Create RA Exception" sap:VirtualizedContainerService.HintSize="431,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;RA could not be created; error details: &quot; + exception.Message]" />
                                <ui:MultipleAssign DisplayName="Multiple Assign - Exception Details (RA Exception)" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[out_SuccessfulCreationRA]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[out_ExceptionDetails]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[out_ExceptionDetails + "RA could not be created; error details: " + exception.Message + " "]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <If Condition="[out_RAInternalIds.Length &gt;= 2]" DisplayName="If - out_RAInternalIds.Length &gt;= 2" sap:VirtualizedContainerService.HintSize="624,248.8" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign DisplayName="Assign - out_RAInternalIds, If - out_RAInternalIds.Length &gt;= 2" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_RAInternalIds]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[out_RAInternalIds.Substring(0,out_RAInternalIds.Length-2)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="RA Doesn't Need To Be Created" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message - RA Doesn't Need To Be Created" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;RA doesn't need to be created...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Assign DisplayName="Assign - Set RA Should Be Created Argument False" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_RAShouldBeCreated]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>